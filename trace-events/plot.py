"""
Generate a .svg image from  a list of .json files with events generated by dealii::EventLog

Usage: python plot.py event.json* >output.svg

(c) timo.heister@gmail.com
"""

import json, sys
import fileinput

class Event(object):
    def __init__(self, type, name, start, id, pid):
        self.type = type
        self.name = name
        self.start = start
        self.end = start
        self.id = id
        self.pid = pid

    




y = 3
x_scale = 10
lines_out = []
colors = ["#ff0000", "#00ff00", "#0000ff", "#ff00ff", "#ffaa00", "#00aa00", "#00ffff", "#aaaaaa", "#000000"]

max_time = 0

pid = 0

events = []
for f in sys.argv[1:]:

    pid += 1
    #inp = ''.join(fileinput.readline())
    inp = open(f,'r').read()
    o = json.loads(inp)

    myevents = {}
    for entry in o["events"]:
        if entry['type']=="start":
            myevents[entry['id']] = Event('default',entry['name'], entry['time'], entry['id'], pid)
        elif entry['type']=="once":
            myevents[entry['id']] = Event('once',entry['name'], entry['time'], entry['id'], pid)
        elif entry['type']=="end":
            e = myevents[entry['id']]
            e.end = entry['time']
        elif entry['type']=="dummy":
            pass
        else:
            raise "error"

    for e in myevents:
        events.append(myevents[e])




obj = {}
obj['traceEvents'] = []
for e in events:
    dur = max(1e-5, e.end-e.start)
    eobj = {"name" : e.name, "ph": "X", "ts":1000.0*e.start, "pid":e.pid, "dur":1000.0*dur }
    obj['traceEvents'].append(eobj)

#obj['otherData']={"version": "test"}

print json.dumps(obj, indent=4, separators=(',', ': '))

    


